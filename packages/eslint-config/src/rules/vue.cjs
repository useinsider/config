/** @type {import("eslint").Linter.Config} */
module.exports = {
    rules: {
        'vue/array-bracket-newline': ['error'],
        'vue/array-bracket-spacing': ['error', 'never'],
        'vue/arrow-spacing': ['error'],
        'vue/attribute-hyphenation': ['error', 'always'],
        'vue/attributes-order': ['error', {
            alphabetical: false,
            order: [
                'DEFINITION',
                'LIST_RENDERING',
                'CONDITIONALS',
                'RENDER_MODIFIERS',
                'GLOBAL',
                'UNIQUE',
                'TWO_WAY_BINDING',
                'OTHER_DIRECTIVES',
                'OTHER_ATTR',
                'EVENTS',
                'CONTENT',
            ],
        }],
        'vue/brace-style': ['error', '1tbs'],
        'vue/comma-dangle': ['error', {
            arrays: 'always-multiline',
            exports: 'always-multiline',
            functions: 'never',
            imports: 'always-multiline',
            objects: 'always-multiline',
        }],
        'vue/comma-spacing': ['error'],
        'vue/comma-style': ['error', 'last'],
        'vue/component-definition-name-casing': ['error', 'PascalCase'],
        'vue/component-name-in-template-casing': ['error', 'PascalCase', {
            registeredComponentsOnly: false,
            ignores: [
                'component',
                'transition',
            ],
        }],
        'vue/component-tags-order': ['error', {
            order: [
                'script[setup]',
                'template',
                'script:not([setup])',
                'style',
            ],
        }],
        'vue/dot-location': ['error'],
        'vue/dot-notation': ['error'],
        'vue/eqeqeq': ['error'],
        'vue/func-call-spacing': ['error'],
        'vue/html-closing-bracket-newline': ['error', {
            multiline: 'never',
            singleline: 'never',
        }],
        'vue/html-end-tags': ['error'],
        'vue/html-indent': ['error', 4],
        'vue/html-quotes': ['error', 'double'],
        'vue/html-self-closing': ['error'],
        'vue/html-closing-bracket-spacing': ['error'],
        'vue/key-spacing': ['error'],
        'vue/keyword-spacing': ['error'],
        'vue/max-attributes-per-line': ['error', {
            multiline: {
                max: 1,
            },
            singleline: 1,
        }],
        'vue/max-len': ['error', 120, {
            ignoreComments: true,
            ignoreRegExpLiterals: true,
            ignoreTemplateLiterals: true,
            ignoreTrailingComments: true,
            ignoreUrls: true,
        }],
        'vue/multi-word-component-names': 'off',
        'vue/mustache-interpolation-spacing': ['error', 'always'],
        'vue/no-bare-strings-in-template': ['error'],
        'vue/no-constant-condition': ['error'],
        'vue/no-empty-component-block': ['error'],
        'vue/no-empty-pattern': ['error'],
        'vue/no-extra-parens': ['error'],
        'vue/no-irregular-whitespace': ['error'],
        'vue/no-multi-spaces': ['error'],
        'vue/no-multiple-objects-in-class': ['error'],
        'vue/no-potential-component-option-typo': ['error'],
        'vue/no-reserved-component-names': ['error'],
        'vue/no-restricted-syntax': ['error'],
        'vue/no-spaces-around-equal-signs-in-attribute': ['error'],
        'vue/no-sparse-arrays': ['error'],
        'vue/no-undef-components': ['error'],
        'vue/no-unsupported-features': ['error'],
        'vue/no-unused-properties': ['error'],
        'vue/no-unused-refs': ['error'],
        'vue/no-use-computed-property-like-method': ['error'],
        'vue/no-use-v-if-with-v-for': 'error',
        'vue/no-useless-concat': ['error'],
        'vue/no-useless-mustaches': ['error'],
        'vue/no-useless-v-bind': ['error'],
        'vue/no-v-text': ['error'],
        'vue/object-curly-newline': ['error', {
            consistent: true,
        }],
        'vue/object-curly-spacing': ['error', 'always'],
        'vue/object-property-newline': ['error', {
            allowAllPropertiesOnSameLine: true,
        }],
        'vue/object-shorthand': ['error', 'always'],
        'vue/order-in-components': ['error', {
            order: [
                'el',
                'name',
                'parent',
                'functional',
                ['delimiters', 'comments'],
                ['components', 'directives', 'filters'],
                'extends',
                'mixins',
                'inheritAttrs',
                'model',
                ['props', 'propsData'],
                'data',
                'computed',
                'watch',
                'LIFECYCLE_HOOKS',
                'methods',
                ['template', 'render'],
                'renderError',
            ],
        }],
        'vue/padding-line-between-blocks': ['error'],
        'vue/prefer-separate-static-class': ['error'],
        'vue/prefer-template': ['error'],
        'vue/prefer-true-attribute-shorthand': ['error'],
        'vue/prop-name-casing': ['error', 'camelCase'],
        'vue/quote-props': ['error', 'as-needed'],
        'vue/require-default-prop': ['error'],
        'vue/require-prop-type-constructor': 'error',
        'vue/require-prop-types': ['error'],
        'vue/script-indent': ['error', 4, {
            switchCase: 1,
        }],
        'vue/space-in-parens': ['error', 'never'],
        'vue/space-infix-ops': ['error'],
        'vue/space-unary-ops': ['error'],
        'vue/template-curly-spacing': ['error'],
        'vue/this-in-template': ['error', 'never'],
        'vue/v-bind-style': ['error', 'shorthand'],
        'vue/v-on-function-call': 'off',
        'vue/v-on-style': ['error', 'shorthand'],
        'vue/v-on-event-hyphenation': 'off',
        'vue/no-setup-props-destructure': 'off',
        'vue/block-tag-newline': ['error', {
            singleline: 'always',
            multiline: 'always',
        }],
        'vue/require-explicit-emits': ['error'],
        'vue/no-required-prop-with-default': ['error'],
        'vue/no-ref-object-destructure': ['error'],
        'vue/no-template-target-blank': ['error'],
        'vue/define-emits-declaration': ['error', 'type-based'],
        'vue/define-props-declaration': ['error', 'type-based'],
    },
};
